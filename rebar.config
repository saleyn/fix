{pre_hooks,
  [{compile, "make nif"},
   {erlc_compile, "make nif"},
   {compile, "sed -e 's!{{FIXDUMP_ENV}}!'\"${FIXDUMP_ENV}\"'!' -e 's!{{ESCRIPT}}!'\"${ESCRIPT:-escript}\"'!' src/fixdump.es.src > priv/fixdump.es"},
   {compile, "elixirc -o ${REBAR_BARE_COMPILER_OUTPUT_DIR:-$REBAR_BUILD_DIR/lib/fix}/ebin src/*.ex"},
   {clean, "rm -vf c_src/fix_{fields,variant}*.cpp src/fix_{fields,decoder,groups}*.erl include/fix_{adm,app}_msgs*.hrl priv/*.so priv/*.es c_src/*.o"}
  ]}.

{erl_opts, [
   warn_unused_vars,
   warn_export_all,
   warn_shadow_vars,
   warn_unused_import,
   nowarn_unused_function,
   warn_bif_clash,
   warn_unused_record,
   warn_deprecated_function,
   warn_obsolete_guard,
   strict_validation,
   warn_export_vars,
   warn_exported_vars,
   debug_info
]}.

{deps, [
  {parse_trans, "~> 3.3.1"},
  {etran,       "~> 0.3"},
  {util,        "~> 1.0"}
]}.

{artifacts, [
  "priv/fix_nif.so",
  "ebin/Elixir.FIX.DecodeError.beam",
  "ebin/Elixir.FIX.DecodeError.beam"
]}.

{escript_main_app,  fix}.
{escript_name,      fixdump}.
{escript_emu_args,  "%%! -escript main fix_dump_es -pa fix/ebin -pa util/ebin -env ERL_CRASH_DUMP /dev/null\n"}.
{escript_incl_apps, []}.

%{provider_hooks, [{post, [{compile, escriptize}]}]}.

{profiles,
  [{test,
    [{erl_opts,
      [nowarn_export_all,
       debug_info,
       nowarn_missing_spec,
       nowarn_unused_vars
      ]
    }]
  }]
}.
